buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:+'
        classpath 'com.ofg:uptodate-gradle-plugin:1.2.0'
        if (project.hasProperty('coverage')) {
            classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:1.0.2'
        }
        classpath 'nu.studer:gradle-plugindev-plugin:1.0.3'
    }
}

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.ofg.uptodate'
apply plugin: 'maven-publish'
apply plugin: 'groovy'
apply plugin: 'nu.studer.plugindev'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile "org.slf4j:slf4j-api:1.7.10"
    compile 'org.javassist:javassist:3.19.0-GA'
    compile('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude module: 'groovy-all'
    }

    testRuntime 'org.slf4j:slf4j-log4j12:1.7.10'
    testRuntime 'cglib:cglib-nodep:3.1'
    testRuntime 'org.objenesis:objenesis:2.1'
    testCompile('com.netflix.nebula:nebula-test:2.2.0') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
}

uptodate {
    addExcludedVersionPatterns '^1.*-groovy-2.[3-4]$'
}

sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDirs += ["src/main/java"]

test {
    maxParallelForks = 8
    testLogging {
        exceptionFormat = 'full'
    }
}

bintrayUpload.dependsOn 'build'

plugindev {
    pluginId ='com.blogspot.toomuchcoding.testprofiler'
    pluginImplementationClass 'com.blogspot.toomuchcoding.testprofiler.TestProfilerPlugin'
    pluginDescription 'Gradle plugin that profiles your tests. Gives you a CSV file sorted by tests execution time.'
    pluginLicenses 'Apache-2.0'
    pluginTags 'gradle', 'plugin', 'testing'
    authorId 'marcingrzejszczak'
    authorName 'Marcin Grzejszczak'
    authorEmail 'marcin@grzejszczak.pl'
    projectUrl 'https://github.com/marcingrzejszczak/gradle-test-profiler'
    projectInceptionYear '2015'
    done() // do not omit this
}


bintray {
    user = project.properties['bintrayUser']
    key = project.properties['bintrayKey']
    pkg.repo = 'com-blogspot-toomuchcoding'
}
if (project.hasProperty('coverage')) {
    apply plugin: 'jacoco'
    apply plugin: 'com.github.kt3k.coveralls'

    jacoco {
        toolVersion = '0.7.1.201405082137'
    }

    jacocoTestReport {
        reports {
            xml.enabled = true // coveralls plugin depends on xml format report
            html.enabled = true
        }
    }
    test {
        ignoreFailures = true
    }
}
